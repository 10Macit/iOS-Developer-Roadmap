
# ^ - at the end means "essential topic"
# RESOURCES - keyword for marking resources section, nested subcategories are not supported, e.g. DON'T write "- Books: \n    - 2014:"

- iOS Developer^:
    - Practical knowledge^:
        - Getting started:
            - RESOURCES:
                - Tutorials:
                    - "Jump Right In": "https://developer.apple.com/library/content/referencelibrary/GettingStarted/DevelopiOSAppsSwift/"
                    - "Raywenderlich.com": "https://www.raywenderlich.com/"
            - First pet project ideas:
        - Languages^:
            - Objective-C^:
                - RESOURCES:
                  - Books:
                      - "Effective Objective-C 2.0: 52 Specific Ways to Improve Your IOS and OS X Programs": "https://www.amazon.co.uk/Effective-Objective-C-2-0-Specific-Development/dp/0321917014"
                  - Blogs:
                      - "NSBlog": "https://www.mikeash.com/pyblog/"
                      - "objc.io": "https://www.objc.io/"
                - Blocks^:
                    - Memory Management:
                - KVC:
                - KVO:
                - Toll-free bridging:
                - Runtime^:
                    - Method messaging:
                    - Swizling:
                    - NSZombies and KVO implementation:
            - Swift^:
                - RESOURCES:
                    - Books:
                        - "The Swift Programming Language": "https://itunes.apple.com/gb/book/the-swift-programming-language-swift-4-0-3/id881256329"
                        - "Advanced Swift": "https://www.objc.io/books/advanced-swift/"
                    - Blogs:
                        - "SWIFT BY SUNDELL": "https://www.swiftbysundell.com/"
                - Closures:
                - Initializers^:
                - Generics:
                - Protocols^:
                - Structs^:
                - Enums^:
                - Runtime:
                    - Method dispatch:
                        - RESOURCES:
                            - Articles:
                                - "Method Dispatch in Swift": "https://www.raizlabs.com/dev/2016/12/swift-method-dispatch/"
        - Memory management^:
            - Stack and Heap^:
                - RESOURCES:
                    - Articles:
                        - "Stack and Heap Objects in Objective-C": "https://www.mikeash.com/pyblog/friday-qa-2010-01-15-stack-and-heap-objects-in-objective-c.html"
            - Value vs Reference type^:
            - MRC:
                - RESOURCES:
                    - Articles:
                        - "Memory Management Tutorial for iOS": "https://www.raywenderlich.com/2657/memory-management-tutorial-for-ios"
            - ARC^:
                - RESOURCES:
                    - Articles:
                        - "Beginning ARC in iOS 5 Tutorial Part 1": "https://www.raywenderlich.com/5677/beginning-arc-in-ios-5-part-1"
                - weak references:
            - Retain cycles^:
            - Garbage collector:
            - Memory leaks^:
            - Shallow and deep copying:
            - Autorelease pool:
                - RESOURCES:
                    - Articles:
                        - "@AUTORELEASEPOOL": "http://en.swifter.tips/autoreleasepool/"
        - Multithreading and concurency^:
            - POSIX threads:
            - NSThreads:
            - Perform selector family:
            - GCD^:
                - RESOURCES:
                    - Articles:
                        - "Grand Central Dispatch In-Depth: Part 1/2": "https://www.raywenderlich.com/60749/grand-central-dispatch-in-depth-part-1"
            - NSOperation(Queue)^:
                - RESOURCES:
                    - Articles:
                        - "NSOperation": "http://nshipster.com/nsoperation/" 
            - Runloop^:
                - RESOURCES:
                    - Articles:
                        - "Run Loops": "https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/Multithreading/RunLoopManagement/RunLoopManagement.html"
            - Synchronisation^:
                - RESOURCES:
                    - Articles:
                        - "Synchronization": "https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/Multithreading/ThreadSafety/ThreadSafety.html"
            - Problems:
                - Race condition:
                - Deadlock:
                - Reader-writer problems:
        - Cocoa Touch^:
            - UIKit^:
                - RESOURCES:
                    - Articles:
                        - "How to make friends with UIKit": "https://badootech.badoo.com/how-to-make-friends-with-uikit-934ea431ffef"
                - UIApplication^:
                    - States^:
                        - RESOURCES:
                            - Articles:
                                - "The App Life Cycle": "https://developer.apple.com/library/content/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/TheAppLifeCycle/TheAppLifeCycle.html"
                    - UIApplicationDelegate:
                - UIViews^:
                    - UITableViews^:
                        - RESOURCES:
                            - Articles:
                                - "Clean Table View Code": "https://www.objc.io/issues/1-view-controllers/table-views/" 
                    - UICollectionViews^:
                        - RESOURCES:
                            - Articles:
                                - "Custom Collection View Layouts": "https://www.objc.io/issues/3-views/collection-view-layouts/"
                - Layers:
                - Layout^:
                    - Frame-based^:
                        - RESOURCES:
                            - Articles:
                                - "CGGeometry": "http://nshipster.com/cggeometry/"
                    - Autolayout^:
                        - RESOURCES:
                            - Articles:
                                - "The Ultimate Guide To IOS AutoLayout": "https://digitalleaves.com/ultimate-guide-autolayout/"
                        - UIStackView:
                - Animations:
                    - RESOURCES:
                        - Articles:
                            - "objc.io Animations": "https://www.objc.io/issues/12-animations/"
                - Transform:
                - Navigation^:
                    - RESOURCES:
                        - Articles:
                            - "Improve your iOS Architecture with FlowControllers": "http://merowing.info/2016/01/improve-your-ios-architecture-with-flowcontrollers/"
                            - "Screen navigation in iOS": "https://badootech.badoo.com/screen-navigation-in-ios-dd99b09228b2"
                - UIViewController^:
                    - Lifecycle^:
            - Foundation^:
                - Notifications vs Delegation vs observing^:
                    - RESOURCES:
                        - Articles:
                            - "WHEN TO USE DELEGATION, NOTIFICATION, OR OBSERVATION IN IOS": "https://shinesolutions.com/2011/06/14/delegation-notification-and-observation/"
                - Collections:
                - Networking^:
                    - RESOURCES:
                        - Articles:
                            - "A Crash Course on Networking in iOS": "https://www.sitepoint.com/a-crash-course-on-networking-in-ios/"
                - Serialization^:
                    - NSCoding:
                    - Codable^:
                    - JSON^:
                    - XML:
                    - Protobuf:
            - UserNotifications:
            - Core Location:
                - RESOURCES:
                    - Articles: 
                        - "iOS Location Tracking": "https://badootech.badoo.com/ios-location-tracking-aac4e2323629"
            - Core Motion:
                - RESOURCES:
                    - Documentation: 
                        - "Core Motion": "https://developer.apple.com/documentation/coremotion"
                    - WWDC:
                        - "Health and Fitness with Core Motion": "https://developer.apple.com/videos/play/wwdc2016/713/"
                        - "Creating Immersive Apps with Core Motion": "https://developer.apple.com/videos/play/wwdc2017/704/"
            - Work in background mode^:
                - RESOURCES:
                    - Articles:
                        - "Background Modes Tutorial: Getting Started": "https://www.raywenderlich.com/143128/background-modes-tutorial-getting-started"
        - Software Architecture^:
            - Design Patterns^:
                - Architectural^:
                    - RESOURCES:
                        - Articles:
                            - "iOS Architecture Patterns": "https://medium.com/ios-os-x-development/ios-architecture-patterns-ecba4c38de52"
                    - MVC^:
                        - RESOURCES:
                            - Slides:
                                - "Stanford MVC": "https://web.stanford.edu/class/cs75n/1_MVC.pdf"
                            - Articles:
                                - "Do MVC like itâ€™s 1979": "https://badootech.badoo.com/do-mvc-like-its-1979-da62304f6568"
                    - MVVM^:
                        - RESOURCES:
                            - Articles:
                                - "Introduction to MVVM": "https://www.objc.io/issues/13-architecture/mvvm/"
                    - MVP^:
                    - Clean architecture^:
                        - VIPER:
                            - RESOURCES:
                                - Articles:
                                    - "Architecting iOS Apps with VIPER": "https://www.objc.io/issues/13-architecture/viper/"
                                - Books:
                                    - "The Book of VIPER": "https://github.com/strongself/The-Book-of-VIPER"
                        - RIBs:
                            - RESOURCES:
                                - Articles:
                                    - "RIBs": "https://eng.uber.com/new-rider-app/"
                    - Coordinators:
                        - RESOURCES:
                            - Articles:
                                - "Coordinators Redux": "http://khanlou.com/2015/10/coordinators-redux/"
                                - "Advanced Coordinators": "http://khanlou.com/tag/advanced-coordinators/"
                - Creational^:
                    - Abstract Factory:
                    - Builder:
                    - Factory Method:
                    - Object Pool:
                    - Prototype:
                    - Singleton^:
                        - RESOURCES:
                            - Articles:
                                - "Singletons": "https://thatthinginswift.com/singletons/"
                    - Factory:
                    - Abstract Factory:
                - Structural^:
                    - Adapter:
                    - Bridge:
                    - Composite:
                    - Decorator:
                    - Facade:
                    - Flyweight:
                    - Proxy:
                - Behavioural^:
                    - Chain of responsibility:
                    - Command:
                    - Interpreter:
                    - Iterator:
                    - Mediator:
                    - Memento:
                    - Observer:
                    - State:
                    - Strategy:
                    - Visitor:
                - AntiPatterns:
                - Concurrency:
            - Design Principles^:
                - SOLID^:
                - Inversion of Control^:
                    - Dependency Injection^:
                        - RESOURCES:
                            - Articles:
                                - "Dependency Injection": "https://www.objc.io/issues/15-testing/dependency-injection/"
                    - Service Locator:
                - Protocol-Oriented Programming:
                    - RESOURCES:
                        - WWDC:
                            - "Protocol-Oriented Programming in Swift": "https://developer.apple.com/videos/play/wwdc2015/408/"
            - Object-Oriented Programming:
            - Functional programming:
                - Functional Reactive Programming Frameworks:
                  - React Native:
                  - RxSwift:
                  - RxRealm, RxDataSources:
        - Dependencies management^:
            - Cocoapods:
            - Carthage:
            - Swift Package Manager:
        - Project structure and File/Group organisation:
        - Version Control Systems^:
            - Git^:
                - RESOURCES:
                    - Websites:
                        - "git - the simple guide": "http://rogerdudler.github.io/git-guide/"
        - Debugging:
            - Instruments:
            - Best practices:
                - Checklists:
        - UX:
        - Caching and Persistency^:
            - Core Data:
                - RESOURCES:
                    - Articles:
                        - "Core Data Programming Guide": "https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/CoreData/index.html#//apple_ref/doc/uid/TP40001075-CH2-SW1"
                        - "Core Data from Scratch: Concurrency": "https://code.tutsplus.com/tutorials/core-data-from-scratch-concurrency--cms-22131"
            - Realm:
            - YAPDatabase:
        - Testing^:
            - Unit Tests^:
                - RESOURCES:
                    - Articles:
                        - "iOS Unit Testing and UI Testing Tutorial": "https://www.raywenderlich.com/150073/ios-unit-testing-and-ui-testing-tutorial"
                        - "Singleton, Service Locator and tests in iOS": "https://badootech.badoo.com/singleton-service-locator-and-tests-in-ios-d69484e88944"
            - Snapshot Tests:
            - Functional test:
            - TDD:
            - BDD:
        - Performance optimization:
            - Increase FPS:
            - Decrease memory footprint:
        - Code signing:
        - Tools:
            - Swiftlint:
            - Sourcery:
            - Fastlane:
        - Continuous Integration:
            - Jenkins:
            - Xcode server:
        - Security:
            - Keychain:
            - Security Transforms API:
        - tvOS:
        - WatchKit:
    - Computer Science knowledge^:
        - Algorithms^:
            - RESOURCES:
                - Websites:
                    - "Swift Algorithm Club": "https://github.com/raywenderlich/swift-algorithm-club"
                - Courses:
                    - "Algorithms Specialization": "https://www.coursera.org/specializations/algorithms"
                - Practice:
                    - "HackerRank": "https://www.hackerrank.com/dashboard"
                    - "LeetCode": "https://leetcode.com/explore/"
                    - "topcoder": "https://www.topcoder.com/member-onboarding/learning-practicing-skills/"
            - Sorting^:
            - Graph Theory^:
                - Trees:
            - Strings^:
            - Greedy:
            - Dynamic Programming:
            - Bit Manipulation:
            - Recursion^:
            - Game Theory:
            - NP Complete:
            - Big-O notation^:
        - Abstract Data Types^:
            - Stack^:
            - Array^:
            - List^:
            - Map^:
            - Multimap:
            - Set^:
            - Multiset (Bag):
            - Graph^:
            - Queue^:
            - Priority Queue:
            - Double-ended priority queue:
            - Double-ended queue:
        - System design^:
            - Problems:
                - RESOURCES:
                    - Articles:
                        - "Top 10 System Design Interview Questions for Software Engineers": "https://hackernoon.com/top-10-system-design-interview-questions-for-software-engineers-8561290f0444"
